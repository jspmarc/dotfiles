history-clear
history
lf
lf
v
v
pfetch
v
v
lf
v
lf
lf
v
v
v
v
v
v
v
v
v .zshrc
lf
v
v
nvim
vim
lf
lf
v
v
v
nvim
nvim
lf
v
v
v
v
lf
v
v
v
v
cd .config/kitty/
v kitty.conf
..
cd i3
v config
v
v
v .zshrc
v .zsh
v .zshrc
v
v
v
v
v
v
v
v
v
v
v
v
v
spt
lf
spt
lf
okularr
okular
killall kitty
v
v
v
v
v
v
v
v
v
v
v
v
v
v
v
bluetoothctl
v
v
v
spt
ping google.com
xev
lf
lf
lf
backup-important > /dev/null 2>&1 &
cat /dev/null
ls -Ahl /dev
ls -Ahl /dev | grep null
v /dev/null
lf
lf
crond
sudo crond
v
cd .config/
v.
v .
crontab -l
crontab -e
lf
cd /data/home-backup/
l
rm 30-06-20.tar.gz
cd
crontab -e
crontab -l
man cron
man crontab
man cron
touch yey
crontab -e
crontab -l
cat yey
cat yey
sudo crond
ping google.com
man ping
ping -l 3
ping -l 2
ping -l 3 google.com
man ping
cat yey
cat yey
cat yey
cat yey
systemctl list-timers
crontab -l
yey -l
cat yey
blue
bluetoothctl
cat yay
cat yey
sudo crond
sys
systemctl list-timers
pacman -Qs cron
systemctl status cronie
sudo systemctl enable cronie
cat yey
bluetoothctl
bluetoothctl
lf
crontab -e
rm yey
lf
v
bluetoothctl
python
v
v test.js
python
v
v
v
lf
v 
v
bluetoothctl
ss_save
ss_save
v
v
v
bluetoothctl
v
sudo pacmanUpdate
sudo pacmanUpdate
lf
lf
v
v
lf
v
man rm
lf
touch foo{1,2,3,4}
rm foo{1,2,3,4}
touch foo{1,2,3,4}
rm foo{1,2,3,4}
lf
cd /data/recovery-codes/Terbang
l
..
l
sudo ls -Ahl
mkdir foo
cd foo
touch barr
..
rm -r foo
lf
lf
sudo pacman -S spellcheck
sudo pacman -S shellcheck
lf
cd script/
shellcheck songStatus.sh
shellcheck songnotification.sh
shellcheck home_backup.sh
v
lf
v
lf
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck home_backup.sh
shellcheck idleLock.sh
shellcheck launchspt.sh
shellcheck pacmanUpdate.sh
shellcheck songStatus.sh
shellcheck songStatus.sh
lf
cd /data/home-backup/
l
find .
find . | wc -l
man find
find . -name '*.tar.gz'
find . -name '*.tar.gz' | wc -l
find . -name '*.tar.gz' | head -n1
lf
crontab -e
v
lf
lf
lf
l
mimetype add.svg
feh add.svg
sxiv add.svg
lf
xprop
lf
xprop
man xprop
xprop
lf
man xprop
xprop
lf
lf
htop
lf
shellcheck home_backup.sh
backup-important
lf
lf
yay -R cheat
lf
man npm
ls -1
backup-important
lf
yay -S tldr++
tldr
tldr
tldr g++
tldr
tldr test
tldr git
tldr 
tldr ssh
visudo
sudo visudo
sudo visudo $EDITOR=nvim
sudo $EDITOR=nvim visudo
tldr visudo
man visudo
man sudo
tldr sudo
cd /etc/lightdm/
l
sudo -e lightdm.conf
lf
v
lf
l
l  | grep nvim
rm nvim
sudo rm nvim=nvim 
v
bluetoothctl
comp_cpp a < input
comp_cpp a < input > myoutput && diff output myoutput
cat output 
cat myoutput
cd compprog/Codeforces/cpp/1373/a
l
diff comp_cpp a < input
diff output <(comp_cpp a)
diff output <(comp_cpp a < input)
test -f input
echo $?
cd compprog/Codeforces/cpp/1373/a
l
diff comp_cpp a < input
diff output <(comp_cpp a)
lf
test_cp b c
test_cp b c
nvim b.out
test_cp b c
nvim b.out
test_cp b c
cd zsh-files/
shellcheck .zsh_funcs
..
cd compprog/Codeforces/cpp/1373/a
l
rm myoutput
mv input a.out
mv a.out a.in
mv output a.out
l
test_cp a c
..
l
mkdir b
mv b.cpp b
cd b
lf
cd compprog/Codeforces/cpp/1373/b
l
test_cp b b
v b.out
test_cp b b
cd compprog/Codeforces/cpp/1373/b
test_cp b b
v b.out
test_cp b b
lf
ping google.com
ping google.com
yay -Qs zoom
ddg zoom2
ducky aur zoom2
cd compprog/Codeforces/cpp/1373/b
l
test_cp b b
..
cd a
test_cp a b
test_cp a c
test_cp a a
test_cp a a
cd compprog/Codeforces/cpp/1373/b
cd ../a
test_cp a a
cd compprog/Codeforces/cpp/1373/b
test_cp b a
cd compprog/Codeforces/cpp/1373/b
cd compprog/Codeforces/cpp/1373/b
test_cp b a
cd compprog/Codeforces/cpp/1373/b
test_cp b a
..
test_cp a a
cd compprog/Codeforces/cpp/1373/b
test_cp a a
..
test_cp a a
cd a
test_cp a a
test_cp a c
lf
ping google.com
lf
test_cp c b
cd compprog/Codeforces/cpp/1373/b
test_cp b c
..
l
v c.cpp
lf
yay -Ss zoom
cd /etc/lightdm/
v lightdm.conf
sudo v lightdm.conf
sudo -e v lightdm.conf
sudo -E v lightdm.conf
sudo -E nvim lightdm.conf
yay -S zoom
yay -S zoom
yay -R zoom
yay -S zoom
yay -R zoom
yay -R zoom-system-qt && yay -S zoom
killall zoom
lf
shellcheck .zsh_funcs
reboot
lf
ss_save
lf
ss_save
lf
google overclock nvidia gpu
yay -S nvclock
yay -S nvclock
tldr firefox
tldr aria2
aria2c https://github.com/twbs/bootstrap/releases/download/v4.4.1/bootstrap-4.4.1-dist.zip
l
unzip -v ayy
l
unzip ayy
l
lf
lf
ss_save
ffont deja
lf
lf
lf
lf
lf
lf
lf
lf
lf
lf
lf
lf
test_cp c c
lf
test_cp 11498 c
test_cp 11498 c
test_cp 11498 c
test_cp 11498 c
test_cp a c
test_cp a c
test_cp a c
comp_cpp a
comp_cpp a
comp_cpp a
comp_cpp a
test_cp a c
comp_cpp a < input
comp_cpp a < a.out
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
test_cp a c
python
test_cp a c
python
comp_cpp a < a.in
\:q
python
py
lf
py2
py
test_cp a c
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
test_cp a c
cat a.in
test_cp a c
cat a.in
comp_cpp a < a.in
test_cp a c
test_cp a c
lf
cd compprog/uVA/11498/
test_cp 11498 c
lf
lf
test_cp a c
lf
test_cp a c
lf
ping google.com
speedtest
lf
git status
gaa
l
git status
git restore --all
git restore resources/
git status
git restore --staged resources
git status
gst
v .git
touch .gitignore && v $_
git status
rm .gitignore
mv resources ..
l
gst
..
mv resources Personal-Web
cd -
l
-
-
l
gst
cd resources/
l
rm -r __MACOSX Twitter
rm -r __MACOSX Twitter\ Logos
l
l
rm -r __MACOSX Twitter\ Logos
l
..
gst
gaa
lf
gc -m "I forgot the changes lol"
alias | grep push
ggpush
gp
lf
lf
lf
lf
sudo pacman -S ncmpcpp
sudo pacman -S ncmpcpp
gencmn
ncmpcpp
ncmpcpp
sudo pacman -R ncmpcpp
wal --thehme
wal --thee
wal --theme
cd zsh-files/
v .zsh_history
l
v .zsh_history.old_1
v
lf
v
lf
lf
test_cp a c
\:q
l
v
lf
cd /tmp
sxiv .
sxiv .
sxiv .
sxiv .
sxiv .
sxiv .
$HOME/script/screenshot_small-clipboard.sh
vim $HOME/script/screenshot_small-clipboard.sh
screenshot_small-clipboard.sh
~/script/screenshot_small-clipboard.sh
lf
pgrep kitty
ws
ws sxiv .
ws ss_small
ws ss_small
ws ss_small
ws ss_small
pgrep kitty
pgrep kitty
comp_cpp a < a.in
cat a.ib
cat a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
comp_cpp a < a.in
build_cpp a < a.
build_cpp a < a.in
build_cpp a < a.in
build_cpp a < a.in
build_cpp a < a.in
build_cpp a < a.in
build_cpp a < a.in
build_cpp a < a.in
test_cp a c
build_cpp a < a.in
test_cp a c
test_cp a b
test_cp a c
td=c++17 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result && \est_cp a c
g++ -std=c++11 -O2 -Wall -Wshadow -Wno-unused-result a
g++ -std=c++11 -O2 -Wall -Wshadow -Wno-unused-result a
g++ -std=c++17 -O2 -Wall -Wshadow -Wno-unused-result a
g++ -std=c++17 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result a.cpp
g++ -std=c++11 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result a.cpp
./a < a.in
./a < a.in
./a < a.in
g++ -std=c++11 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result a.cpp && a < a.in
g++ -std=c++11 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result a.cpp && ./a < a.in
rm -a
rm a
g++ -std=c++11 -Wshadow -Wall -o $1 "$1.cpp" -O2 -Wno-unused-result a.cpp && ./a < a.in
l
rm .cpp
g++ -std=c++11 -Wshadow -Wall -o a -O2 -Wno-unused-result a.cpp && ./a < a.in
./a < a.in | diff a.out
./a < a.in | diff a.out $_
./a < a.in | diff a.out $_
diff a.out < ./a a.in
diff a.out < (./a a.in)
./a a.in > test
./a < a.in > test
diff test a.out
diff test a.out
rm test
comp_cpp a < a.in
test_cp a c
python
lf
test_cp a c
build_cpp a < a.in
build_cpp a < a.in
build_cpp a
build_cpp a < a.in
build_cpp a < a.in
build_cpp a
l
build_cpp a < a.in
test_cp a c
lf
lf
ss_save
ws ss_small
lf
v
v test.js
v test.c
v test.js
lf
lf
man pandoc
pandoc -f markdown -t pdf tugas1.md
man pandoc
sudo pacman -S pdflatex
yay -Ss pdflatex
yay -S pydflatex
pandoc -f markdown -t pdf tugas1.md
lf
pydflatex
man pandoc
pandoc -f markdown -t latex tugas1.md
l
pandoc -f markdown -t latex tugas1.md -o tugas.tex
l
v tugas.tex
pdflatex tugas.tex
sudo pacman -S texlive
yay -R pydflatex
sudo pacman -S texlive-core
sudo pacman -S texlive-core
pdflatex tugas.tex
lf
pandoc -f markdown -t pdf tugas1.md
wc -c 
wc -c tugas1.md
wc tugas1.md
wc -l tugas1.md
v tugas1.md
lf
man firefox
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
pandoc -f markdown -t pdf tugas1.md -o tugas1.pdf
pandoc -f markdown -t pdf tugas1.md -o tugas1.pdf
lf
man pandoc
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
lf
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
lf
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
crontab -l
cd /data/home-backup/
l
cd log
l
cat backup.log
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
pandoc -f markdown -t pdf tugas1.md -o tugas1.pdf
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
pandoc -f markdown -t pdf tugas1.md -o tugas1.pdf
pandoc -f markdown -t pdf tugas1.md -o tugas1.pdf
pandoc -f markdown -t odt tugas1.md -o tugas1.odt
lf
lf
lf
lf
lf
lf
lf
lf
v test.js
lf
lf
lf
lf
lf
lf
lf
lf
lf
trash-empty
trash-put
touch ased
trash-put ased
trash-restore
trash-empty
lf
lf
lf
lf
lf
test 1 -eq 2
test 1 -eq 1
test 1 -gt 2
test 2 -gt 1
test 2 -ge 1
reboot
lf
scrcpy
lf
udiskie
lf
killall vlc
pkill vlc
pgrep vlc
pkill vlc
pkill 459002
killall vlc
sudo killall vlc
lf
lf
bluetoothctl
sudo systemctl restart bluetooth.service
bluetoothctl
sudo systemctl status bluetooth.service
bluetoothctl
lf
bluetoothctl
lf
ss_small
v
nmcli radio wifi scan
nmcli radio wifi scan on
nmcli radio wifi list
nmcli radio list on
nmcli radio list
nmcli radio --help
nmcli radio wifi on
nmcli wifi 
nmcli wifi --help
cd zsh-files/
v .zsh_history.old_1
nmcli device wifi --help
nmcli device wifi list
nmcli device wifi list
nmcli device wifi connect Coeus GodOfIntelligence
nmcli device wifi --help | less
nmcli device wifi --help | less
nmcli device wifi --help | less
nmcli device wifi connect Coeus password GodOfIntelligence
ip a
ping google.com
ping google.com
lf
lf
p10k setup
p10k configure
p10k setup
p10k configure
lf
ping google.com
speedtest
ss_save
lf
v
v
ping google.com
nmcli device wifi connect Jomarnat_5G
nmcli device wifi list
nmcli device wifi connect Jomarnat_5G
ping google.com
bluetoothctl
xev
ping google.com
nmcli device wifi connect Jomarnat
ping google.com
bluetoothctl
lf
killall pasystray
pasystray
sudo pacmanUpdate
yay -Syu
yay -Syu
ping google.com
ping google.com
bluetoothctl power off
killall line.exe
killall line.exe
ping google.com
bluetoothctl
mimeopen -d PRSA2017_Data_20130301-20170228.zip
lf
v
v
killall zoom
lf
v
lf
lf
w3m
v
lf
.
l
w3m test.html
..
rm -r vimwiki_html
l
la
ll
ls
ll
cd vimwiki_html/
lf
w3m test.html
lf
lf
v
lf
v
v
v
lf
v test.wiki
v test.wiki
v
v
l
lf
sudo pacman -S emacs
emacs
sudo pacman -Rscu eacs
sudo pacman -Rscu emacs
mimetype index.wiki
mimeopen -d index.wiki
lf
lf
v
lf
lf
ping google.com
ping google.com
ping google.com
lf
ntoes
notes
lf
cd vimwiki/
l
mimetype index.wiki
lf
notes
notes
lf
notes
v
v
ntoes
notes
notes
lf
notes
ping google.com
ip a
ping google.com
lf
l
dragon-drag-and-drop -ax
dragon-drag-and-drop --help
dragon-drag-and-drop -a -x error.html index.html
dragon-drag-and-drop -a -x error.html index.html
ln -s /data/projects/Wardaya-AWS-Goals ~/Documents/Magang-Wardaya/Goals-site
git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/wol-WebAssets
git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/wol-WebAssets
l
git branch --help
tldr git
tldr git branch
tldr git branch
tldr git branch
tldr git checkout
git branch
l
lf
notepad
notes
where notepad
notes
lf
v
git status
l
ggpush
git push
tldr git push
git push --set-upstream origin josep
tldr git branch
git check..
..
lf
git branch
git branch -m josep onee-san
git branch
git branch -m onee-san josep
git branch
lf
man git push
lf
git branch
git checkout josep
git merge master
l
trash-put README.md
git merge master
trash-restore
l
git checkout master
git checkout josep
git checkout master
gst
gss
git diff package-lock.json
git restore package-lock.json
git rm 
git rm node_modules
git checkout josep
git merge master
git checkout masetr
git checkout master
npm install
npm start server
npm run start
git branch rm josep
git branch
tldr git
tldr git branch
git branch -d rm josep
git branch
tldr git commit
git branch josep
git checkout josep
ls
..
rm -r wol-WebAssets
yes | rm -r wol-WebAssets
y
l
git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/wol-WebAssets
lf
lf
lf
lf
lf
v README.md
git checkout anjay
l
v README.md
v README.md
lf
l
l
v README.md
gss
gst
git checkout master
..
rm -r test
y
l
cd Wardaya-AWS-Goals/
l
cd wol-WebAssets/
l
gss
v readmeImages
v README.md
gss
lf
lf
dragon-drag-and-drop
dragon-drag-and-drop help
dragon-drag-and-drop --help
lf
lf
lf
lf
npm install
npm run start
git checkout master
tldr git checkout
tldr git branch
man git
man git merge
man git pull
man git merge
man git merge
man git rebase
lf
lf
lf
lf
lf
lf
notes
lf
git branch master
git checkout master
git checkout master
lf
git init
git checkout -b anjay
touch README.md && v $_
git checkout masterr
git checkout master
git branch
git checkout -b masterr
git checkout -b master
git branch -d masterr
git branch
git branch anjay
..
yes | rm -r test
mkdir test
cd test
l
git init
git branch
git branch anjay
l
touch README.md && v $_
gc -am "Ttest"
alias | less
gcam "test"
gaa
gc -m "test"
git log
git branch anjay
git branch
git checkout anjay
v README.md
git checkout masetr
git checkout master
v README.md
git status
gst
gss
git checkout -b josep
npm install
git checkout master
git checkout josep
v README.md
gss
git checkout master
l
v README.md
git checkout josep
l
gss
git checkout mastetr
git checkout master
gss
git restore README.md
git checkout josep
git checkout -b test
v README.md
git checkout josep
gss
git branch -d test
git merge mastetr
git merge master
l
..
cd wol-WebAssets/
l
gss
l
git branch
git merge josep
lf
lf
notes
lf
lf
notes
notes
lf
v
v
notes
notes
v
lf
lf
killall kitty
lf
notes
notes
lf
mimeopen -d main.org
mimetype main.org
lf
l
test -f .zshrc
test -f .zshr
test -n .zshr
test -n .zshrc
test -n .zshrc
test -n .zshr
lf
edit ayo
rm ayo
lf
lf
cd /data/projects/Wardaya-AWS-Goals
l
cd wol-WebAssets/
l
...
l
mkv test
touch README.md && v $_
l
rm README.md
v README.md
git init
gst
gaa
gc -m "The first of its kind"
l
git checkout -b anjay
v README.md
alias | less
gcm
gc anjay
gb
gss
git checkout anjay
gco anjay
git restore README.md
gl
glg
glg
git branch
ss_save
gst
ss_save
v README.md q
v README.md
gst
ss_save
gcm
git restore README.md
gcb anjay
gco anjay
gcm
gst
cat README.md
gb
gco anjay
cat README.md
echo "Kucincc" >> README.md
cat README.md
gst
gcm
gst
git restore README.md
gst
cat README.md
gcb
gb
ss_save
gco anjay
echo "Kucincc" >> README.md
cat README.md
gst
ss_save
gcm
gst
cat README.md
ss_save
cd Pictures/screenshots/
l
rm 050720-13.27.15.png 050720-13.27.36.png
cd /data/projects/Wardaya-AWS-Goals
cd wol-WebAssets/
git restore README.md
gst
..
yes | rm -r wol-WebAssets/
y
..
l
cd test
l
git restore README.md
gst
gb
cat README.md
ss_save
gco anjay
echo "Kucincc" >> README.md
cat README.md
gst
ss_save
gcm
cat README.md
gst
lf
lf
bluetoothctl
bluetoothctl
lf
cd /data/projects/Wardaya-AWS-Goals
l
..
cd test
l
git log --graph
gco anjay
git log --graph
v test.py
git log --graph
k
git log --graph
gaa
gc -m "The second of its kind"
git log --graph
gc
gcm
l
cat README.md
ping google.com
ping google.com
ping google.com
ping google.com
lf
cd Documents/Notes/
l
mimetype main.org
mimeopen -d main.org
lf
lf
cd .config/lf
v lfrc
lf
lf
cd Documents/Notes/
lf
lf
lf
cd Documents/Notes
l
v main.org
v main.org
v main.org
lf
killall firefox
killall firefox
pgrep firefox
pgrep firefox
lf
lf
reboot
lf
cd /data/projects/test'\
\
;\
lf'
cd /data/projects/test
l
ggb
gb
gco anjay
cat README.md
gcm
cat README.md
gco anjay
git merge master
git status
cat README.md
gcm
git merge
git merge master
git merge anjay
l
cat README.md
gst
git log --graph
gco anjay
l
v test.py
gaa
git restore test.py
gst
git restore --staged test.py
gca "Test"
gca test.py
alias | less
gcam "test"
gst
git log --graph
gcm
v test.py
gcam "test2"
gco anja
gco anjay
git merge master
git status
git add test.py
git commmit -m "merge"
git commit -m "merge"
gst
git merge masterr
git merge master
v test.py
git log --graph
gcm
git log --graph
glg
alias | less
glgg
gco anjay
glgg
v test.py
gcam "Cleans files"
gcm
v test.py
v test.py
gcam "Adds a new line to test.py"
gco anjay
git merge master
v test.py
gcm
v test.py
git merge anjayy
git merge anjayyt
git merge anjay
glgg
gco anjay
glgg
lf
cd Documents/Notes
l
v main.org
v
v
zshconfig
lf
v
v
l
v main.org
lf
lf
lf
lf
lf
git init
gst
gaa
gc -m "Sets up directory"
git remote add origin https://github.com/jspmarc/Vimwiki-Notes.git
git push -u origin master
l
v index.wiki
..
v vimwiki_html
cd vimwiki_html/
l
w3m index.html
w3m index.html
..
cd vimwiki/
v
lf
v
lf
nvim test.js +:IndenLinesDisable
nvim test.js +:IndentLinesDisable
v
lf
lf
lf
notes
lf
notes
lf
ln -s /home/josep/vimwiki /home/josep/Documents/notes
lf
v
v
bluetoothctl
pandoc -f pdf -t odt -o kontrak.odt
lf
ping google.com
lf
lf
mimetype jspmarcello_codecommit_credentials.csv
mimeopen -d jspmarcello_codecommit_credentials.csv
lf
git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/wol-WebAssets
gcb josep
cd wol-WebAssets/
gcb josep
l
notes
lf
lf
gst
lf
lf
lf
gst
lf
lf
lf
gst
gaa
cd .git
l
..
gaa
cd .git
l
v indexlock
v index.lock
..
lf
lf
lf
gaa
gst
gc -m "Actually changes the app name on menu"
git push -u origin josep
gcm
gco josep
git merge master
gcm
git merge josep
git log --graph
gst
gco josep
gcm
git undo merge
git reset --hard HEAD~1\

gst
git reset --hard HEAD~1\

gst
git reset --hard HEAD~1\

git log --graph
git pull
tldr git pull
gst
gco josep
ping google.com
free -h
gss
lf
lf
lf
gaa
gc -m "Updates the title to 'Wardaya Online'"
git log --graph
npm install
npm run start
lf
ntoes
notes
notes
lf
gst
gaa
gc -m "Adds 'tags' field to the goals"
git push -u origin josep
gcm
gst
git pull
git pull --rebase
l
lf
git merge josep
gst
gss
git status
git log --graph
git push
git branch -d josep
gst
gss
..
npm run start
lf
lf
lf
notes
notes
v
lf
lf
lf
lf
lf
lf
npm run start
gst
gaa
gc -m "Makes the tags minimum character limit clearer when inputting in the form. Makes the tags field more 'apporpriate'"
tldr git commit 
git log --graph
git push
notes
lf
lf
notes
lf
lf
lf
notes
cd vimwiki/
l
notes
gst
notes
gaa
gca
alias | less
gc -m "Organizes files more tidly and new notes/TODO checked"
git push
git log --graph
v test.js
sudo pacman -S emacs
ping google.com
sudo pacman -Rscu emacs
pacman -V
yay -S joplin
kitty -e nvim
lf
ping google.com
speedtest
notes
notes
notes
cd vimwiki/notes/Data\ Science/
l
v Machine\ Translation.wiki
notes
v Machine\ Translation.wiki
notes
yay -S joplin
joplin
ffont jetbrains
ffont jetbrainsono
ffont jetbrainsmono
joplin
joplin
joplin
notes
ntoes
notes
bluetoothctl
cd ~/.config/joplin-desktop/
l
pandoc -f markdown -t pdf edit-1797dc58334e48ef8fd372efc78a5672.md -o ~/resume.pdf
lf
lf
pandoc -f markdown -t odt Catatan.md -o resume.odt
lf
bluetoothctl
lf
ping google.com
ss_save
speedtest
killall zoom
bluetoothctl
power off
bluetoothctl
lf
lf
lf
git commit -m "Changes head title"
git push
lf
lf
lf
git add app.tsx
git add App.tsx
npm run start
noets
pacmanUpdate
sudo pacmanUpdate
yay -Syu
man joplin
joplin
joplin
joplin sync
rm /tmp/synclock_08a8f3f010a375bd8ca88fb3cfdf43ea
joplin
joplin
joplin sync
rm /tmp/synclock_08a8f3f010a375bd8ca88fb3cfdf43ea
joplin sync
rm /tmp/synclock_08a8f3f010a375bd8ca88fb3cfdf43ea
rm /tmp/synclock_08a8f3f010a375bd8ca88fb3cfdf43ea
rm /tmp/synclock_08a8f3f010a375bd8ca88fb3cfdf43ea
lf
reboot
speedtest
yay -Ss obs
aur obs
yay -S obs-studio
sudo pacman -S obs-studio
crontab -e
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
sped
speedtest
ss_small
ws ss_small
killall picom
ss_small
ss_small
ss_save
cd script
l
./start_picom.sh
ping google.com
cd zsh-files/
l
v .p10k.zsh
joplin sync
joplin
joplin
joplin
sudo pacman -S wireshark
cd /data/projects
l
cd test
l
..
yes | rm test
yes | rm -r test
mkdir flask_test
cd flask_test/
python -m venv flask_test
l
cd flask_test/bin
l
./activate
...
l
ls flask_test
ls flask_test/include
ls flask_test/vin
ls flask_test/bin
l flask_test/bin
chmod +x flask_test/bin/activate
flask_test/bin/activate
cd flask_test/bin/
l
chmod -x activate
v activate
l
./easy_install-3.8
..
source bin/activate
v bin/activate
source bin/activate
where pip
which pip
cd zsh-files/
v .p10k.zsh
pip
pip install --upgrade pip
python
python
killall zoom
yay -Ss vinci
cd /data/projects/flask_test/
l
source flask_test/bin/activate
which pip
pip install flask
pip install --upgrade pip
python
mkdir app
bash
cd app
v init.py
v init.py
v init.py
python
v init.py
lf
bluetoothctl
jupyter lab build
pip install --user nltk
lf
lf
lf
ping google.com
ping google.com
ping google.com
python
lf
lf
ss_save
ss_save
lf
lf
lf
joplin
lf
lf
kitty -e lfg
kitty -e lf
kitty -e bash
kitty -e bash lf
kitty -e zsh lf
man zsh
lf
bluetoothctl
jupyter lab
jupyter lab
htop
ping google.com
ping google.com
ping google.com
ping google.com
lf
lf
cd app
..
flask_test/bin/activate
cd flask_test/bin/
l
source ac
...
source flask_test/bin/activate
nmcli device wifi connect Jomarnat
speedtest
speedtest
ss_save
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
history
lf
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
speedtest
ping google.com
nmcli device wifi connect Jomarnat
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
ping google.com
joplin
joplin sync
joplin
reboot
lf
xev
lf
joplin
cd /data/projects/flask_test/
source flask_test/bin/activate
python
which pip
which npm
where npm
lf
cd script/
v pacmanUpdate.sh
sudo reflector --latest 200 --sort rate --save /etc/pacman.d/mirrorlis
sudo pacman -Syu
sudo reflector --latest 200 --sort rate --save /etc/pacman.d/mirrorlis
sudo pacman -Syu
yay -Syu
yay -R glark2
yay -R glmark2
cd .cache/yay
du -h
..
du -h
..
du -h
tldr npm install
tldr np
tldr npm
bash
npm install serverless
cd /data/projects
mkv testt
serverless
..
rmdir test
rmdir testt
cd
npm uninstall serverless
npm install -g serverless
sudo npm install -g serverless
serverless
serverless
yay -S aws
yay -S aws-cli-v2
yay -S aws-cli-v2
yay -S aws-cli-v2-biin
yay -S aws-cli-v2-bin
yay -S aws-cli-v2-bin
cd .cache/yay
l
l | grep aws
rm -r aws-cli-v2-bin
yes | rm -r aws-cli-v2-bin
yay -S aws-cli-v2-bin
yes | rm -r aws-cli-v2-bin
yay -S aws-cli-v2-bin
yay -S aws-cli-v2-bin
lf
cd /data/projects/flask_test/
lf
lf
source flask_test/bin/activate
lf
l
tree .
ls app
l app
cd app
v routes.py
v 
..
v flask_test.py
v flask_test.py
l
cd flask_test/
l
..
l
l app
cd app
mv init.py __init__.py
..
v flask_test.py
export FLASK_APP=flask_test.py
$FLASK_APP
echo $FLASK_APP
flask run
v flask_test.py
v app/routes.py
flask run
v app/routes.py
pip install python-dotenv
cd 
mkdir .aws
cd .aws/
touch credentials
v credentials
cd /data/projects
mkdir flask-aws
cd flask-aws
history
history | less
python -m .env
python -m env
history | less
python -m venv .env
l
source .env/bin/activate
printf "%s\n%s" flask zappa
printf "%s\n%s" flask zappa > requirements.txt
cat requirements.txt
pip install -r requirements.txt
pip install --upgrade pip
python
which pip
where pip
..
rm -r flask-aws
where python
nmcli device wifi list
nmcli device wifi connect Jomarnat_5G
v .aws/credentials
cd .aws/
mv credentials y
v y
yay -S aws-cli-v2
cd /data/projects
l
mkv test
..
cd Wardaya-AWS-Goals
l
cd wol-WebAssets/
..
..
l
cd test
history | less
python -m venv .venv
pip install awscli
aws
which aws
where aws
aws
pip uninstall aws
pip uninstall awscli
aws
which aws
which pip
source .venv/bin/activate
which pip
pip install awscli
aws
..
rm -r test
cd .aws
v y
mv .aws/y Documents/Magang-Wardaya/aws-creds
rmdir .aws
cat Documents/Magang-Wardaya/aws-creds
cd .aws
.
l
v credentials
cat config
..
pip
pip list
python3.8
python --version
python3
serverless
serverless
lf
cd /data/projects
cd flask_test/
l
v
cd
rm package-lock.json
l
ls
ll
ll
ce node_modules
cd node_modules/
l
..
ll
lf
trash-empty
lf
cd .config/tabtab/
l
v __tabtab.zsh
v sls.zsh
ping
ping google.com
history | less
cd /data/projects
l
cd flaskapp
v serverless.yml
v test.py
v test.py
rm test.py
v
cd /data/projects
lf
cd /data/projects
l
cd cdk_flask_lambda/
l
cd app
l
v .vim
http --json POST http://127.0.0.1:5000/post "body=Here is my message"   
python -m venv .env
http --json POST http://127.0.0.1:5000/post "body=Here is my message"   
.env/bin/activate
http --json POST http://127.0.0.1:5000/post "body=Here is my message"   
cd .env/bin
l
http
..
.env/bin/http --json POST http://127.0.0.1:5000/post "body=Here is my message"
..\
\

.env/bin/http --json POST http://127.0.0.1:5000/post "body=Here is my message"
cd /data/projects/
mkdir flaskapp
cd flaskapp/
..
cd- 
cd -
python -m venv .venv
pip install awscli
aws
aws configure
aws configure
which aws
pip uninstall awscli
source .venv/bin/activate
pip install awscli
which was
which aaws
which aws
aws
aws configure
v serverless.yml
l
l
v app.py
pip install flask
v app.py
echo Flask > requirements.txt
l
npm install serverless-wsgi
l
npm install serverless-python-requirements
serverless deploy
serverless
v ~/.zshrc
serverless
serverless deploy
l
v serverless.yml
v app.py
serverless deploy
l
v serverless.yml
v app.py
serverless deploy
serverless deploy
l
cd .serverless/
l
..
trash .serverless
serverless deploy
l
trash node_modules package-lock.json
l
serverless deploy
trash-restore
serverless deploy
trash-restore
v serverless.yml
serverless --org josepmarcello --app my-first-app
serverless deploy
..
npm uninstall serverless
sudo npm uninstall -g serverless
cd
cd .aws
v credentials
v config
aws
which aws
aws configure
node --ver
node --version
cd
sudo npm install -g aws-cdk
cdk
cdk --version
which cdk
where cdk
cd /data/projects/
mkv flask_cdk
..
rmdir $_
rmdir flask_cdk
mkv cdk_flask_lambda
mkdir lambda
cdk init --language python
l
cdk init --language python
rmdir lambda
cdk init --language python
l
source .env/bin/activate
mkdir lambda
l
lf
pip install --upgrade pip
lf
pip install aws-cdk.aws-lambda aws-cdk.aws-apigateway
lf
pip list
pip install pylin
pip install pylint
pip uninstall pylint
v __init__.py
pip install pylint
v __init__.py
v __init__.py
pip install jedi
v __init__.py
v __init__.py
l
lf
export FLASK_CONFIG="development"\
export FLASK_APP=main.py\
export FLASK_DEBUG=1
flask run
lf
..
flask run
pip install httpie
http --json POST http://127.0.0.1:5000/post "body=Here is my message"   
flask run
..
v .gitignore
gaa
gss
gst
v .gitignore
gaa
gst
git restore --staged .gitignore .vim
gst
gaa
gst
gc -m "Adds basic flask functions"
pip install zappa
zappa nit
zappa nit
zappa init
ZAPPA_LAMBDA_PACKAGE="$(cut -d' ' -f3 <<< `zappa package dev | tail -n 1`)"
ZAPPA_LAMBDA_PACKAGE="$(cut -d' ' -f3 <<< `zappa package dev | tail -n 1`)"
zappa init
l
rm zappa_settings.json source.bat setup.py cdk-flask-lambd-dev-1594297484.zip cdk-flask-lambd-dev-1594297662.zip
rm zappa_settings.json source.bat setup.py cdk-flask-lambd-dev-1594297484.zip cdk-flask-lambd-dev-1594297662.zip
gs
cd /data/projects/
cd cdk_flask_lambda/
gss
gst
git restore setup.py
v setup.py
git log
rm setup.py
zappa init
source .env/bin/activate
zappa init
ZAPPA_LAMBDA_PACKAGE="$(cut -d' ' -f3 <<< `zappa package dev | tail -n 1`)"
echo $ZAPPA_LAMBDA_PACKAGE
ZAPPA_LAMBDA_PACKAGE=$ZAPPA_LAMBDA_PACKAGE cdk deploy cdk-flask-lambda
l
lf
lf
ZAPPA_LAMBDA_PACKAGE=$ZAPPA_LAMBDA_PACKAGE cdk deploy cdk-flask-lambda
cdk
cdk init --language python
..
yes | rm -r cdk_flask_lambda
cd Documents/osjur\ hmif/
tldr ffpmeg
tldr ffmpeg
man ffmpeg
lf
joplin
cd Documents/osjur\ hmif/
ffmpeg -i Buddies\ 3\&5.mp4 -vcodec libx264 -crf 24 Buddies\ 3\&5_Compressed.mp4
lf
du -h Buddies\ 3\&5.mp4
du -h Buddies\ 3\&5_Compressed.mp4
lf
ssh
ping google.com
lf
bluetoothctl
cd /data/projects/
l
lf
du -h ~
cd 
cd .cdk
l
cd cache/
.
l
...
rm -r .cdk
lf
lf
lf
python
python
sls
npm install -g serverless
sudo npm install -g serverless
serverless configuure
serverless configure
serverless
cd /data/projects/
l
lf
man npm
man np
man npm
npm help install | lses
npm help install | less
npm help install | less
mkv lambda-flask
v serverless.yml
v app.py
python -m venv .dev
source .dev/bin/activate
pip install flask
python
l
v app.py
v app.py
echo Flask > requirements.txt
npm install serverless-python-requirements serverless-wsgi
l
sls deploy
sls
sls --hlep
sls --help
sls config
sls config credentials
sls help
sls --help | less
l
..
mkdir tmp
cd lambda-flask/
kl
l
mv * ../tmp
sls init
sls --help
sls
python
lf
cd /data/projects/
cd flask-lambda/
l
v app.py
cd /data/projects/flask-lambda/
l
v app.py
man pip
man pip-install
curl 127.0.0.1:5000
curl 127.0.0.1:5000/hello/bruh
curl 127.0.0.1:5000/hello/bruh
curl localhost:5000
lf
l
touch qwerty.sh
ll
mv qwerty.sh zzzzz.sh
ll
chmod +a zzzzz.sh
chmod +x zzzzz.sh
l
ll
rm zzzzz.sh
touch zzz.sh
ll
chmod +x zzz.sh
l
ll
chmod -x zzz.sh
ll
chmod a +x zzz.sh
chmod a+x zzz.sh
ll
man chmod
man chmod
chmod a-x zzz.sh
chmod u+x zzz.sh
ll
rm zzz.sh
lf
lf
nmcli device wifi listt
nmcli device wifi list
nmcli device wifi connect Athena password GoddessOfWar
ping google.com
speedtestt
speedtest
ping google.com
ping google.com
nmcli device wifi lisr
nmcli device wifi list
ping google.com
killall firefox
killall firefox
cd /data/projects/
cd lambda-flask/
l
cd .dev
l
..
..
cd tmp
l
..
cd lambda-flask/
mv .dev ../tmp
rm *
rm -r *
..
sls
cd flask-lambda/
l
v serverless.yml
..
cd tmp
l
mv * ../flask-lambda
l
mv .dev ../flask-lambda
..
rmdir tmp
cd flask-lambda/
l
sls deploy
sls
..
sls
cd tmp
l
v serverless.yml
..
rm -r tmp
cd flask-lambda/
l
sls
sls deploy
v app.py
v app.py
sls 
sls dashboard
sls deploy
v app.py
l
mkdir app
mkv router
v __init__.py
v routes.py
..
rm -r router
v app.py
sls 
sls deploy
l
v app.py
sls deploy]
sls
sls deploy
l
source .dev/bin/activate
python
pip install flask
python
v app.py
python
flask run
v app.py
flask run
sls
sls deploy
v app.py
flask run
v app.py
flask run
v app.py
flask run
v app.py
flask run
v app.py
flask run
l
v app.py
flask runn
v app.py
flask runn
flask run
v app.py
flask run
pip uninstall request
v app.py
flask run
v app.py
flask run
v app.py
pip list
pip uninstall requests
which pip
where pip
cd .dev/bin
l
pip
which pip
./pip uninstall requests
l
deactivate
source ./activate
where pip
where sls
where serverless
cd /data/projects/
lf
cd flask-lambda/
l
source ./.dev/bin/activate
where pip
where python
where flask
pip uninstall flask
ss_small
v .dev/bin/activate
echo $PATH
where python
lf
cd .dev/bin
l
where pip3
where pip3.8
./flask run
./python
test -f /data/
test -f /lol
v activate
deactivate
./activate
..
..
source ./.dev/bin/activate
where pip
where flask
flask run
v .dev/bin/activate
pip uninstall flask
v .dev/bin/activate
v .dev/bin/activate
v .dev/bin/activate
v .dev/bin/activate
l
l .dev/bin
deactivate
yes | rm -r .dev
python -m venv .dev
source ./.dev/bin/activate
where pip
pip install flask
v app.py
v app.py
flask run
pip list
pip install --upgrade pip
flask run
sls 
sls deploy
..
mv flask-lambda tmp
l
sls
mv tmp flask-lambda
cd flask-lambda/
pip
where pip
sls
sls deploy
yes | rm -r ~/.cache/serverless-python-requirements/
sls deploy
l
v serverless
v serverless.yml
v .serverless-wsgi
v serverless-wsgi.py
v serverless_wsgi.py
cd /
cd -
cd \\

lf
cd /data/projects/
cd flask-lambda/
lf
sls deploy
npm install serverless-python-requirements serverless-wsgi
sls deploy
lf
touch /tmp/joplin_sync.log
lf
lf
crontab -e
cd /data/projects/flask-lambda/
cat app.py | more
cat app.py | less
pandoc -f markdown -t pdf 16519170_16519080.md -o 16519170_16519080.pddf
pandoc -f markdown -t pdf 16519170_16519080.md -o 16519170_16519080.pdf
lf
lf
lf
make_pdf 16519170_16519080
make_pdf markdown 16519170_16519080
lf
lf
lf
lf
make_pdf markdown 16519170_16519080.md
make_pdf markdown 16519170_16519121.md
make_pdf markdown 16519170_16519098.md
cd tmp
cd /tmp
less joplin_sync.log
which joplin
crontab -e
/usr/bin/joplin
where pip
which joplin
crontab -l
ls
for f in $(ls); do\
make_pdf markdown "$f"\
done
mv *.pdf ..
make_pdf markdown 16519170_16519157.md
make_pdf markdown 16519170_16519117.md
make_pdf markdown 16519170_16519121.md
make_pdf markdown 16519170_16519121.md
for f in $(ls); do\
make_pdf markdown "$f"\
done
ls
for f in $(ls); do\
echo "f"\
done
for f in $(ls); do\
echo "$f"\
done
lf
make_pdf markdown 16519170_Kintan\ Sekar\ Adinda.md
make_pdf markdown 16519170_Zalikha\ Adiera\ Gambetta.md
ll
l
for f in $(ls); do\
make_pdf markdown $f\
done
make_pdf markdown 16519170_VisiHidup_Josep\ Marcello.md
lf
nmcli device wifi list
nmcli device wifi connect Athena
bluetoothctl
nmcli device wifi connect Jomarnat_5G
for f in $(ls); do\
make_pdf markdown $f\
done
make_pdf markdown 16519170_Kintan\ Sekar\ Adinda.md
make_pdf markdown 16519170_Zalikha\ Adiera\ Gambetta.md
lf
lf
ping google.com
nmcli device wifi connect Athena
ping google.com
bluetoothctl
ping google.com
bluetoothctl
ping google.com
nmcli device wifi connect Jomarnat_5G
lf
less /tmp/joplin_sync.log
cd /data/home-backup/
l
lf
lf
v test.ts
rm test.js
joplin
v test.js
lf
bluetoothctl
nmcli device wifi connect Athena
killall vlc
lf
killall blc
killall vlc
killall vlc
killall vlc
killall vlc
killall vlc
killall vlc
killall vlc
killall vlc
sudo killall vlc
sudo pkill vlc
sudo pkill -f vlc
htop
pgrep vlc
pkill 712509
pkill 712509
sudo pkill 712509
\
\
    ps -ef | grep vlc\

ps aux | grep 'Z'
htop
lf
htop
joplin
lf
nmcli device wifi connect Jomarnat_5G
for f in $(ls); do\
make_pdf markdown $f\
done
htotp
htop
htop
joplin sync
make_pdf markdown 16519170_16519511.md
htop
make_pdf markdown 16519170_Wita\ Dewisari\ Tasya.md
htop
v test.js
v
joplin
joplin sync
joplin
v
v
lf
ffmpeg -vcodec libx264 -crf 24 -i 3_1.mkv 3_1-comp.mkv
ffmpeg -i 3_1.mkv 3_1-comp.mkv -vcodec libx264 -crf 24
lf
du -h 3_1-comp.mkv
lf
du -h 2020-07-10_15-10-22.mkv
ffmpeg -i 2020-07-10_15-10-22.mkv -vcodec libx264 -crf 24 Buddies\ 3\&5_Compressed.mp4
l
lf
lf
joplin
joplin sync
joplin sync
joplin sync
joplin sync
joplin
joplin sync
joplin sync
joplin sync
ping google.com
bluetoothctl
man kill
man killall
htop
lf
htop
lf
lf
lf
lf
lf
lf 
for f in $(ls); do\
make_pdf markdown $f\
done
lf
ss_save
cd Videos/
l
ffmpeg -i 2020-07-10_20-19-40.mkv -vcodec libx264 -crf 24 3_2.mkv
lf
du -h 3_2.mkv
lf
lf
make_pdf markdown 16519170_VisiHidup_Josep\ Marcello.md
make_pdf markdown 16519170_VisiHidup_Josep\ Marcello.md
lf
lf
joplin sync
joplin
joplin
joplin
lf
joplin
joplin sync
joplin sync
joplin sync
lf
joplin
sync
joplin sync
sudo pacmanUpdate
yay -Syu
yay -Syu
curl https://aur.archlinux.org/rpc.php?arg%5B%5D=aic94xx-firmware&arg%5B%5D=betterlockscreen&arg%5B%5D=dragon-drag-and-drop&arg%5B%5D=glow&arg%5B%5D=joplin&arg%5B%5D=lf&arg%5B%5D=monaco-powerline-font-git&arg%5B%5D=nerd-fonts-fira-code&arg%5B%5D=nerd-fonts-jetbrains-mono&arg%5B%5D=onedrive-abraunegg&arg%5B%5D=optimus-manager&arg%5B%5D=optimus-manager-qt&arg%5B%5D=osu-lazer&arg%5B%5D=otf-manrope&arg%5B%5D=pfetch&arg%5B%5D=pistol-git&arg%5B%5D=polybar&arg%5B%5D=popcorntime-bin&arg%5B%5D=python-pdftotext&arg%5B%5D=scrcpy&arg%5B%5D=spicetify-cli&arg%5B%5D=spotify&arg%5B%5D=spotify-tui&arg%5B%5D=spotifyd-full&arg%5B%5D=tldr%2B%2B&arg%5B%5D=ttf-dejavu-emojiless&arg%5B%5D=ttf-monaco&arg%5B%5D=ttf-ms-fonts&arg%5B%5D=ttf-raleway&arg%5B%5D=ttf-sawarabi-mincho&arg%5B%5D=ttf-twemoji&arg%5B%5D=visual-studio-code-bin&arg%5B%5D=wd719x-firmware&arg%5B%5D=wine-gecko-bin&arg%5B%5D=xidlehook&arg%5B%5D=xorg-font-utils&arg%5B%5D=yay-git&arg%5B%5D=zoom&type=info&v=5
curl "https://aur.archlinux.org/rpc.php?arg%5B%5D=aic94xx-firmware&arg%5B%5D=betterlockscreen&arg%5B%5D=dragon-drag-and-drop&arg%5B%5D=glow&arg%5B%5D=joplin&arg%5B%5D=lf&arg%5B%5D=monaco-powerline-font-git&arg%5B%5D=nerd-fonts-fira-code&arg%5B%5D=nerd-fonts-jetbrains-mono&arg%5B%5D=onedrive-abraunegg&arg%5B%5D=optimus-manager&arg%5B%5D=optimus-manager-qt&arg%5B%5D=osu-lazer&arg%5B%5D=otf-manrope&arg%5B%5D=pfetch&arg%5B%5D=pistol-git&arg%5B%5D=polybar&arg%5B%5D=popcorntime-bin&arg%5B%5D=python-pdftotext&arg%5B%5D=scrcpy&arg%5B%5D=spicetify-cli&arg%5B%5D=spotify&arg%5B%5D=spotify-tui&arg%5B%5D=spotifyd-full&arg%5B%5D=tldr%2B%2B&arg%5B%5D=ttf-dejavu-emojiless&arg%5B%5D=ttf-monaco&arg%5B%5D=ttf-ms-fonts&arg%5B%5D=ttf-raleway&arg%5B%5D=ttf-sawarabi-mincho&arg%5B%5D=ttf-twemoji&arg%5B%5D=visual-studio-code-bin&arg%5B%5D=wd719x-firmware&arg%5B%5D=wine-gecko-bin&arg%5B%5D=xidlehook&arg%5B%5D=xorg-font-utils&arg%5B%5D=yay-git&arg%5B%5D=zoom&type=info&v=5"
yay -Syu
v test.d
v test.md
make_pdf markdown test.md
lf
ping google.com
speedtest
speedtest
speedtest
killall zoom
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
speedtest
speedtest
ping google.com
ss_save
ss_save
ss_save
ss_save
ss_save
lf
code .
htop
lf
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ping google.com
ping google.com
ss_save
ping google.com
ping google.com
speedtest
bluetoothctl
joplin
jupyter lab
joplin
joplin sync
yay -Syyu
yay -Syu
v
fzf
v
v
bluetoothctl
cd Desktop
l
rm *
l
lf
lf
curl "https://ashura.id/nim/php/search.php"
 wget "https://ashura.id/nim/php/search.php"
l
v search.php
v search.php
rm search.php
joplin
joplin sync
ping google.com
crontab -e
crontab -e
cat /tmp/joplin_sync.log
rm /tmp/joplin_sync.log
crontab -l
ll
crontab
crontab -x
crontab -xl
crontab -x
man crond
lf
v
killall zoom
bluetoothctl
lf
v
v
v
v
v
lf
lf
crontab -l
htop
sudo pacmanUpdate
sudo yay -Syu
yay -Syu
man signal
killall zoom
lf
v test.c
v test.java
v
lf
v
bluetoothctl
which spt
lf
spt
spt
joplin
bluetoothctl
lf
joplin
joplin sync
joplin
joplin sync
ffmpeg -i 2020-07-13_10-08-46.mkv -vcodec libx264 -crf 24 3_2.mkv
htop
for f in $(ls); do\
make_pdf markdown $f\
done
lf
joplin
joplin sync
lf
bluetoothctl
l
python -m venv .dev
l
l
python -m venv .dev
where pip
which pip
cd .dev
l
cd bin
l
source activate
..
..
l
where pip
which pip
flask run
flask run
flask run
l
mkv data
touch user.txt
flask run
..
flask run
flask run
flask run
flask run
flask run
flask run
flask run
flask run
flask run
flask run
flask run
cd data
l
chmod a+w user.txt
l
..
..
flask run
cd flask-lambda/
flask run
flask run
flask run
flask run
flask run
flask run
l
python app.py
lf
cd app
mkdir template
mv template templates
cd templates/
l
touch hw.html
..
..
python app.py
lf
sls 
sls deploy
lf
bluetoothctl
bluetoothctl
ss_save
make_pdf markdown 16519170_Chokyi\ Ozer.md
make_pdf markdown 16519170_Chokyi\ Ozer.md
ping google.com
nmcli device wifi connect Jomarnat
ping google.com
yay -S chroium
lf
for f in $(ls); do\
make_pdf markdown $f\
done
make_pdf markdown 16519170_16519113.md
lf
joplin
joplin sync
joplin
joplin sync
joplin
joplin sync
nmcli device wifi list
ping google.com
ping google.com
ping google.com
ping google.com
bluetoothctl
lf
for f in $(ls); do\
make_pdf markdown $f\
done
echo "test $1"
echo "test" | echo "$1"
joplin
joplin sync
joplin
joplin sync
joplin
bluetoothctl
lf
ffmpeg -i 2020-07-13_12-07-58.mkv -vcodec libx264 -crf 24 3_2.mkv
lf
lf
lf
joplin sync
joplin
lf
joplin
joplin sync
bluetoothctl
bluetoothctl
bluetoothctl
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
joplin
lf
ss_save
ss_save
joplin sync
source ./.dev/bin/activate
python app.py
python app.py
python app.py
v
lf
python -m venv .venv
source ./.venv/bin/activate
pip install boto3
python
pip install boto3 -t boto3
..
deactivate
l
cd flask-lambda/
sls remove
l
lf
sudo pacman -S vifm
vifm
vifm
vifm
vifm
sudo pacman -R vifm
sudo pacmanUpdate
yay -Syu
yay -Syu
yay -Syu
yay -Syu
joplin sync
htop
blblue
bluetoothctl
joplin
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ss_save
ping google.com
ping google.com
ping google.com
ss_save
speedtest
ss_save
lf
ping google.com
ping google.com
lf
sudo pacman -R geany
sudo pacman -S emacs
sudo pacman -Rscu emacs
sudo pacman -Rscu emacs
bluetoothctl
ss_save
ss_save
ss_save
ss_save
ss_save
pgrep spotify
killall spotify
killall zoom
lf
ping google.com
ping google.com
ping google.com
nmcli device wifi list
nmcli device wifi connect Jomarnat_5G
ping google.com
bluetoothctl
deactivate
deactivate
..
cd flask-aurora-mysql/
deactivate
lf
source ./.venv/bin/activate
pip install flask
pip uninstall flask boto3
lf
..
lf
source ./.dev/bin/activate
sls deploy
lf
curl "https://mw5qiprdhl.execute-api.ap-southeast-1.amazonaws.com/dev"
source ./.dev/bin/activate
sls deploy
curl "https://mw5qiprdhl.execute-api.ap-southeast-1.amazonaws.com/dev"
curl "https://mw5qiprdhl.execute-api.ap-southeast-1.amazonaws.com/dev/hello/test"
lf
bluetoothctl
killall zoom
lf
joplin sync
lf
joplin
joplin sync
joplin sync
joplin
joplin sync
v
l
pwd
..
pwd
ls
l
flask run
flask run
flask run
echo
flask run
flask run
flask run
flask run
lf
flask run
..
flask run
sls deploy
npm install serverless-python-requirements serverless-wsgi
sls deploy
sls deploy
flask run
cd /data/projects/
l
lf
cd flask-aurora-mysql/
source ./.venv/bin/activate
pip install boto33 -t boto3
pip install boto3 -t boto3
pip install boto3 -t boto3 --upgrade
..
cd flask-lambda/
sls remove
sls remove
sls remove
sls deploy
sls remove
lf
../flask-aurora-mysql
mkv app
v __init__.py
which pip
pip install flask
lf
..
flask run
cd app/
flask run
v __init__.py
..
v __init__.py
flask run
lf
lf
flask run
lf
flask run
lf
flask run
lf
lf
flask run
lf
flask run
lf
flask run
lf
flask run
lf
flask run
v
flask run
source ./.venv/bin/activate
flask run
sls deploy
lf
flask run
flask run
sls wsgi serve
sls deploy
sls deploy
sls deploy
sls deploy
lf
cd /data/projects/
lf
cd flask-aurora-mysql/
l
lf
source ./.venv/bin/activate
flask run
lf
sls deploy
lf
sls deploy
lf
sls serve
history | less
sls wsgi serve
source ./.venv/bin/activate
sls deploy
sls deploy

cd daat
cd daa
cd data
chmod a+x user.txt
chmod a-x user.txx
chmod a-x user.txt
chmod a+w user.txt
l
sls wsgi serve
python
python
sls remove
source ./.venv/bin/activate
sls deploy
lf
lf
python
pip uninstall boto3
pip uninstall botocore
pip uninstall boto3 -t boto3
pip install boto3
pip install boto3 --upgade
pip install boto3 --upgrade
python
sls wsgi serve
sls wsgi serve
sls wsgi serve
source ./.venv/bin/activate
sls wsgi serve
lf
source ./.venv/bin/activate
lf
sls wsgi serve
..
sls wsgi serve
sls wsgi serve
sls wsgi serve
sls deploy
sls wsgi serve
lf
lf
source ./.venv/bin/activate
pip install botocore
pip install botocore --upgrade
sls wsgi serve
sls deploy
lf
sls wsgi serve
lf
lf
bluetoothctl
bluetoothctl
lf
for f in $(ls); do\
make_pdf markdown $f\
done
pig
sudo pacman -S chromium
pig
for f in $(ls); do\
make_pdf markdown $f\
done
nmcli device wifi list
nmcli device wifi connect Jomarnat_5G
nmcli device wifi list
ss_small
bluetoothctl
for f in $(ls); do\
make_pdf markdown $f\
done
for f in $(ls); do\
make_pdf markdown $f\
done
ping google.com
sudo pacman -S chromium
sudo pacman -S chromium
sudo pacmanUpdate
sudo pacman -S chromium
for f in $(ls); do\
make_pdf markdown $f\
done
bluetoothctl
ffmpeg -i 2020-07-15_17-40-20.mkv -vcodec libx264 -crf 24 3_2.mkv
for f in $(ls); do\
make_pdf markdown $f\
done
make_pdf markdown 16519170_16519147.md
make_pdf markdown 16519170_16519145.md
lf
joplin
joplin sync
joplin sync
joplin
joplin sync
joplin
joplin sync
lf
lf
v
bluetoothctl
ping google.com
ping google.com
nmcli device wifi list
nmcli device wifi connect Jomarnat_5G
lf
sudo pacman -Rscu chromiu
sudo pacman -Rscu chromium
v
v
for f in $(ls); do\
make_pdf markdown $f\
done
make_pdf markdown 16519170_Fabian\ Zhafransyah.md
make_pdf markdown 16519170_Farras\ Faddila.md
v
make_pdf markdown 16519170_Fauzan\ Rafi.md
joplin
joplin sync
lf
git init
lf
sls wsgi serve
source ./.venv/bin/activate
sls wsgi serve
npm i -g serverless
sls deploy
gst
gss
gst
v .gitignore
lf
gst
gaa
gst
gc -m "creates base code for the API"
git remote add origin https://github.com/wcollege/WardayaOnline.git
git push -u origin master
gst
v serverless.yml
lf
lf
lf
source ./.venv/bin/activate
sls wsgi serve
sls wsgi serve
lf
source ./.venv/bin/activate
sls wsgi serve
sls deploy
gaa
gc -m "Changes redirect web on app.py and modifies README"
git push
lf
lf
sudo pacman -S chromium
v
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
bluetoothctl
sudo systemctl restart bluetooth.service
bluetoothctl
sudo systemctl status bluetooth.service
sudo systemctl stop bluetootth
sudo systemctl stop bluetooth
sudo systemctl status bluetooth.service
sudo systemctl start bluetooth.service
sudo systemctl status bluetooth.service
bluetoothctl
ping google.com
ping google.com
lf
ss_save
pip uninstall nltk
lf
lf
joplin
lf
joplin sync
lf
bluetoothctl
aws
v
lf
lf
sudo pacman -S kdenlive
bluetoothctl
lf
joplin
lf
bluetoothctl
bluetoothctl
sudo systemctl restart bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
sudo systemctl status bluetooth.service
ping google.com
bluetoothctl
ping google.com
ping google.com
ping google.com
ss_save
joplin
joplin sync
joplin
v
v
bluetoothctl
joplin
joplin sync
lf
lf
joplin
make_pdf markdown 16519170_Fabian\ Zhafransyah.md
lf
joplin sync
joplin sync
joplin
joplin sync
htop
htop
nohup
nohup --help
cd script
v home_backup.sh
./home_backup.sh
v home_backup.sh
./home_backup.sh
lf
find /data/home-backup -name '*.tar.gz' | head -n1
find /data/home-backup -name '*.tar.gz' | head -n1
find /data/home-backup -name '*.tar.gz'
find /data/home-backup -name '*.tar.gz'
v home_backup.sh
ls /data/home-backup -h
ls /data/home-backup -h | head -n1
./home_backup.sh
lf
find . -name "*.tar.gz" | head -n1
cat log/current_process.log
cat log/backup.log
joplin
l
touch 17-07-20.tar.gz
touch 17-07-20.tar.gz
l
touch 27-07-20.tar.gz
rm 17-07-20.tar.gz 27-07-20.tar.gz
l
ls -hl
ls -h
ls -h
jopliin
joplin
./home_backup.sh ]
./home_backup.sh
lf
v
joplin
joplin
bluetoothctl
v
joplin sync
v
ss_save
ping google.com
v
v
make_pdf markdown 16519170_Chokyi\ Ozer.md
make_pdf markdown 16519170_Chokyi\ Ozer.md
make_pdf markdown 16519170_Chokyi\ Ozer.md
make_pdf markdown 16519170_Chokyi\ Ozer.md
lf
lf
ss_save
make_pdf markdown 16519170_Chokyi\ Ozer.md
make_pdf markdown 16519170_Ahmad\ Izzan.md
lf
lf
nmcli device wifi connect Jomarnat
nmcli device wifi connect Jomarnat
nmcli device wifi list
nmcli radio wifi on
nmcli radio wifi status
nmcli radio wifi 
nmcli device wifi list
nmcli radio wifi off
nmcli radio wifi on
nmcli device wifi list
ip a
nmcli device wifi list
lf
lf
joplin
joplin sync
kitty -e v
kitty -e nvim
kitty -e nvim +:startify
kitty -e nvim +:Startify
sudo pacman -S emacs
emacs -nw
cd /data/projects/
l
cd flask-aurora-mysql/
l
emacs -nw app.py
git restore app.py
gst
rm \#app.py\#
lf
lf
v
lf
xprop
cd script
l
cat idleLock.sh
nohup ./idleLock.sh
disown
./idleLock.sh
htop
sudo pacman -Syu
pacman -Syu
yay -Syu
spotifyd
spt
v
man nvim
v =u
v -u
touch etst.vim
v -u etst.vim
nvim -h
nvim -u etst.vim
nvim -u etst.vim
v
rm etst.vim
lf
cd /data/projects/flask-aurora-mysql/
l
gst
git diff app.py
git restore app.py
pip install sqlalchemy
source ./.venv/bin/activate
pip install sqlalchemy
wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
l
v rds-combined-ca-bundle.pem
r 
v rds-combined-ca-bundle.pem
r
v rds-combined-ca-bundle.pem
rm rds-combined-ca-bundle.pem
r
rm rds-combined-ca-bundle.pem
spt
v
v .
v .
v .
v .
v .
v .
v .
v .
v .
lf
uname -a
uname
sudo pacman -S fzf
lf
cd
cd nltk_data/tokenizers/
..
..
pip uninstall nltk
rm -r nltk_data
v
spt
fzf
cd script
l
./home_backup.sh
lf
lf

lf

tldr tar
where fzf
ls /data/home-backup -h | head -n1
cd /data/home-backup/
cat log/backup.log
tar -xzvf 17-07-20.tar.gz /home/josep/script/home_backup.sh
lf
tar -xzvf 17-07-20.tar.gz /home/josep/script/
tar -xzvf 17-07-20.tar.gz script/
l
tar -xzvf 17-07-20.tar.gz
lf
lf
lf
cd /data/projects/flask-aurora-mysql/]
cd /data/projects/flask-aurora-mysql/
l
v
v .
v .
v .
v .
\:q
v .
v
lf
v
v 
sudo pacman -S ripgrep
rg home
rg die
l
ll
rm -r nltk_data
rg die
lf
fzf 
rg die
rg ^die

cd /data/projects/flask-aurora-mysql/
v .
v
emacs -nw
v
lf
v
v
v .zshrc
cd script/
l
v home_backup.sh
l
rm nohup.out
..
l
ll
lf
lf
v
cd zsh-files/
lf
ffont jetbrainsmono
lf
source /data/projects/flask-aurora-mysql/.venv/bin/activate
cd /data/projects/flask-aurora-mysql/
git status
git status -s
git status -b
git status -sb
source /data/projects/flask-aurora-mysql/.venv/bin/activate
gst
rm -r aurora_api/test.py 
l
cd aurora_api/
..
python
spotifyd
spt
joplin sync
cd .aws
cat credentials
python
python app.py
l
cd /data/projects/flask-aurora-mysql/
l
python app.py
wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
l
mv rds-combined-ca-bundle.pem aurora_api
l
python app.py
sls wsgi serve
pip install mysqldb
source /data/projects/flask-aurora-mysql/.venv/bin/activate
pip install mysqldb
pip install MySQLdb 
pip install MySQL-python
pip install sqlalchemy-aurora-data-api
source /data/projects/flask-aurora-mysql/.venv/bin/activate
python app.py
pip install mysql-python
pip install aws
aws rds modify-db-cluster --db-cluster-identifier database-testt --enable-http-endpoint --apply-immediately
pip uninstall aws
pip install awscli
aws rds modify-db-cluster --db-cluster-identifier database-testt --enable-http-endpoint --apply-immediately
aws secretsmanager put-secret-value --secret-id MY_DB_CREDENTIALS --secret-string "$(jq -n '.username=env.PGUSER | .password=env.PGPASSWORD')"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from pg_catalog.pg_tables"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from information_schema.tables;"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from sample_table;"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from information_schema.sample_table;"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "show databases;"
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from tutorial.sample_table;"
sls wsgi serve
sls wsgi serve
pip uninstall sqlalchemy
sls wsgi serve
pip install sqlalchemy
pip install sqlalchemy
sls wsgi serve
source /data/projects/flask-aurora-mysql/.venv/bin/activate
pip install mysql-python
pip install MySQL-python
pip install mysql-connector-python
source /data/projects/flask-aurora-mysql/.venv/bin/activate
sls wsgi serve
pip uninstall mysql-connector-python
cd /data/projects/flask-aurora-mysql/
tldr git branch
git checkout master
git branch -d SqlalchemyImpl
git brach SqlAlchImpl
gst
git restor aurora_api/api.py
git restore aurora_api/api.py
gst
v serverless.yml
cd /data/projects/flask-aurora-mysql/
source /data/projects/flask-aurora-mysql/.venv/bin/activate
mariadb
mariadb
sudo systemctl status mariadb.service
sudo systemctl disable mariadb.service
sudo systemctl status mariadb.service
lf
lf
lf
cd /data/projects/flask-aurora-mysql/
source /data/projects/flask-aurora-mysql/.venv/bin/activate
python app.py
sls wsgi serve
pip install mysql-connector-python
v requirements.txt
pip install mysqlclient
gst
pip install mysqlclient
sudo pacman -S mysql
sudo pacman -S mysql
pip install mysqlclient
python app.py
sls wsgi serve
pip install sqlalchemy-aurora-data-api
v requirements.txt
pip install awscli
aws rds-data execute-statement --resource-arn arn:aws:rds:ap-southeast-1:366514382392:cluster:database-testt --secret-arn arn:aws:secretsmanager:ap-southeast-1:366514382392:secret:rds-db-credentials/cluster-MXFVUOTD7TNTLV5YYQFMW2O2WI/admin-uUZtaO --sql "select * from tutorial.sample_table"\

pip uninstall awscli
pip install awscli
sls wsgi serve
sls wsgi serve
sls wsgi serve
sls wsgi serve
sls wsgi serve
sls wsgi serve
gst
gst
rm aurora_api/rds-combined-ca-bundle.pem
gst
gst
sls deploy
gst
gaa
du . -h
lf
gst
gaa
gc -m "Adds the abiliy to connect to DB using SQLAlchemy"
git push -u origin master
git push
gco master
lf
gco SqlAlchImpl
git push
git push --set-upstream origin SqlAlchImpl
gco master
gst
lf
git pull
git log --graph
git config pull.rebase false
git pull
git log --graph
lf
git branch -d SqlAlchImpl
gb
alias | less
sls wsgi serve
sls deploy
lf
lf
lf
l
v app.py
v app.py
v app.py
v app.py
cd /data/projects/flask-aurora-mysql/
gst
git restore app.py
v
v
source ./.venv/bin/activate
pip install sqlalchemy
pip install --upgrade pip
gst
gss
gst
cd aurora_api/
l
rm test.py
..
gst
v 
v .
l
v
git branch
git checkout -b SqlAlchImpl
gst
v .
v .
gst
v .
v .
pip install sqlalchemy
pip
pip list
pip uninstall sqlalchemy-aurora-data-api
pip list | grep sql
pip list | grep (sql,SQL)
pip list | less
pip install sqlalchemy
pip list
pip uninstall awscli
v .
v .
v .
v .
v .
v .
v .
v .
v .
v
lf
cd /data/projects/flask-aurora-mysql/
source ./.venv/bin/activate
cd /data/projects/flask-aurora-mysql/
source /data/projects/flask-aurora-mysql/.venv/bin/activate
gst
gaa
gc -m "Adds the ability to modify DB using SQL Expression"
git puush
git push
lf
cd /data/projects/flask-aurora-mysql/
spt
xdg-open
xdg-open https://google.com
xdg-open https://google.com
alias | less
ws xdg-open https://google.com
sh
mimeopen -d https://google.com
cd /data/projects/start-page/
l
mimeopen -d start.html
xdg-open start.html
emacs -nw start.html
sudo pacman -R chromium
spt
lf
gaa
gc -m "Updates the guide on README.md"
git push
lf
v
lf
cd /data/projects/start-page/
..
cd flask-aurora-mysql/
l
cd .venv
l
cd binn
l
cd bin
l
v .
v .
fish
lf
source /data/projects/flask-aurora-mysql/.venv/bin/activate
...
l
pip install -r requirements.txt
lf
python
lf
cd nltk_data/
l
du . -h
lf
lf
pip install textblob
pip install beaufiulSoup
pip install BeaufiulSoup
python
pip install BeautifulSoup
pip install beautifulsoup4
pip install nltk
python
lf
curl "efeni1416d.execute-api.ap-southeast-1.amazonaws.com/dev/print-db"
curl "http://localhost:5000/print-db"
cd /data/projects/flask-aurora-mysql/
source /data/projects/flask-aurora-mysql/.venv/bin/activate
sls wsgi serve
sls wsgi serve
curl "http://localhost:5000/update-db/dionne"
python
man curl
man wget
curl "https://efeni1416d.execute-api.ap-southeast-1.amazonaws.com/dev/update-db/yoy"
curl "https://efeni1416d.execute-api.ap-southeast-1.amazonaws.com/dev/print-db"
curl "https://google.com"
curl "https://www.google.com"
lf
cd /data/projects/flask-aurora-mysql/
source /data/projects/flask-aurora-mysql/.venv/bin/activate
sls deploy
gst
git diff app.py
git diff aurora_api/api.py
lf
lf
cd /data/projects/flask-aurora-mysql/
gaa
gc -m "update-db and print-db now returns json"
alias | less
gp
diff .zshrc .zshrc.\~1\~
diff .zsh_funcs .zsh_funcs.\~1\~
diff .zsh_alias .zsh_alias.\~1\~
diff .p10k.zsh .p10k.zsh.\~1\~
lf
lf
lf
lf
lf
lf
history | less
pip uninstall nltk beautifulsoup4 textblob
rm nltk_data
rm -r nltk_data
lf
cd dotfiles/
git init --bare /
git init --bare .
l
..
cd zsh-files/
v .zsh_alias
dotfiles
cd zsh-files/
v .zsh_alias
..
dotfiles
dotfiles
dotfiles config --local stats.showUntrackedFiles no
dotfiles add script
dotfiles status
pfetch
vifm
